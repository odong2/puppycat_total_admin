<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.architecture.admin.models.daosub.block.BlockMemberDaoSub">
    <!-- ==============================================================
        SETTING
    =============================================================== -->
    <!-- database name -->
    <sql id="databaseSns">${databaseRefIdSns}</sql>
    <sql id="databaseMember">${databaseRefIdMember}</sql>
    <sql id="databasePush">${databaseRefIdPush}</sql>
    <sql id="databaseTotal">${databaseRefIdTotal}</sql>
    <sql id="databaseShop">${databaseRefIdShop}</sql>

    <!-- 조건 검색 -->
    <sql id="searchCondition">
        <where>
            <choose>
                <when test="type != null and type == 1">
                    <if test="searchWord != '' and searchWord != null">
                        <bind name="val" value="'%' + searchWord + '%'" />
                        <choose>
                            <when test="searchType.equals('id')">
                                AND `pume1`.`id` LIKE #{val}
                            </when>
                            <when test="searchType.equals('nick')">
                                AND `pume1`.`nick` LIKE #{val}
                            </when>
                        </choose>
                    </if>
                    <if test='state != null'>
                        AND `pume1`.`is_del` <![CDATA[ = ]]> #{state}
                    </if>
                </when>
                <when test="type != null and type == 2">
                    <if test="searchWord != '' and searchWord != null">
                        <bind name="val" value="'%' + searchWord + '%'" />
                        <choose>
                            <when test="searchType.equals('id')">
                                AND `pume2`.`id` LIKE #{val}
                            </when>
                            <when test="searchType.equals('nick')">
                                AND `pume2`.`nick` LIKE #{val}
                            </when>
                        </choose>
                    </if>
                    <if test='state != null'>
                        AND `pume2`.`is_del` <![CDATA[ = ]]> #{state}
                    </if>
                </when>
            </choose>
            <if test="searchStartDate != '' and searchStartDate != null and searchEndDate != '' and searchEndDate != null ">
                <![CDATA[
                AND (`snmebl`.`reg_date` >= #{searchStartDate} AND `snmebl`.`reg_date` <= #{searchEndDate})
                ]]>
            </if>
            AND `snmebl`.`state` <![CDATA[ = ]]> 1
        </where>
    </sql>

    <!-- ==============================================================
        SELECT
    =============================================================== -->
    <!-- 차단 목록 조회 -->
    <select id="getList" parameterType="SearchDto" resultType="BlockMemberDto">
        SELECT
            `snmebl`.`idx`,
            `pume1`.`uuid` AS `memberUuid`,
            `pume1`.`id` AS `memberId`,
            `pume1`.`idx` AS `memberIdx`,
            `pume1`.`nick` AS `memberNick`,
            `pume1`.`is_del` AS `memberState`,
            `pume2`.`uuid` AS `blockUuid`,
            `pume2`.`id` AS `blockId`,
            `pume2`.`idx` AS `blockIdx`,
            `pume2`.`nick` AS `blockNick`,
            `pume2`.`is_del` AS `blockState`,
            CONVERT_TZ(`snmebl`.`reg_date`, 'UTC', '${convertTZ}') AS `reg_date`
        FROM
            <include refid="databaseSns"/>`sns_member_block` AS `snmebl`
        INNER JOIN <include refid="databaseMember"/>`puppycat_member` AS `pume1`
            ON `snmebl`.`member_uuid` = `pume1`.`uuid`
        INNER JOIN <include refid="databaseMember"/>`puppycat_member` AS `pume2`
            ON `snmebl`.`block_uuid` = `pume2`.`uuid`
        <include refid="searchCondition"/>
        ORDER BY `snmebl`.`reg_date` DESC
        <if test="pagination != null">
        LIMIT #{recordSize}
        OFFSET #{pagination.limitStart}
        </if>
    </select>

    <!-- 차단 카운트 -->
    <select id="getTotalCount" resultType="_int">
        SELECT
            COUNT(`snmebl`.`idx`) AS iTotalCount
        FROM
            <include refid="databaseSns"/>`sns_member_block` AS `snmebl`
        INNER JOIN <include refid="databaseMember"/>`puppycat_member` AS `pume1`
            ON `snmebl`.`member_uuid` = `pume1`.`uuid`
        INNER JOIN <include refid="databaseMember"/>`puppycat_member` AS `pume2`
            ON `snmebl`.`block_uuid` = `pume2`.`uuid`
        <include refid="searchCondition"/>
    </select>

    <!-- 정상적인 차단 내역이 있는지 체크 -->
    <select id="getBlockByIdx" parameterType="BlockMemberDto" resultType="_int">
        SELECT
            COUNT(`snmebl`.`idx`) AS `cnt`
        FROM
            <include refid="databaseSns" />`sns_member_block` AS `snmebl`
        WHERE
                `snmebl`.`member_uuid` = #{memberUuid}
            AND `snmebl`.`block_uuid`  = #{blockUuid}
            AND `snmebl`.`state` = 1
        LIMIT 1
    </select>

    <!-- 회원 차단 내역 최근 20개 목록 by memberUuid-->
    <select id="getBlockLastTwentyCasesListByMemberUuid" parameterType="BlockMemberDto" resultType="BlockMemberDto">
        SELECT
            `pume`.`id` AS `blockId`,
            `pume`.`nick` AS `blockNick`,
            `pume`.`is_del` AS `blockState`,
            CONVERT_TZ( `snmebl`.`reg_date`, 'UTC', '${convertTZ}') AS `reg_date`
        FROM
            <include refid="databaseSns"/>`sns_member_block` AS `snmebl`
        INNER JOIN <include refid="databaseMember"/>`puppycat_member` AS `pume`
            ON `pume`.`uuid` = `snmebl`.`block_uuid`
        WHERE
            `snmebl`.`member_uuid` = #{memberUuid}
        ORDER BY  `snmebl`.`reg_date` DESC
        LIMIT 20
    </select>

</mapper>